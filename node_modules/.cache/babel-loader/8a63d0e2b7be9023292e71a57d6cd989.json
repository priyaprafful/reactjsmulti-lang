{"ast":null,"code":"import _slicedToArray from \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/pages/Page.js\";\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../prismic-config';\nimport SliceZone from '../components/sliceZone';\nimport Header from '../components/layouts/Header';\n\nconst Page = ({\n  match\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        prismicDoc = _useState2[0],\n        setPrismicDoc = _useState2[1];\n\n  const lang = match.params.lang;\n  const uid = match.params.uid; // Get the homepage documents from Prismic\n\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const pageDoc = await client.getByUID('page', uid, {\n          lang\n        });\n\n        if (pageDoc) {\n          setPrismicDoc(pageDoc.data);\n        } else {\n          console.warn('Page document was not found. Make sure it exists in your Prismic repository');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchPrismicData();\n  }, [uid, {\n    lang\n  }]);\n\n  if (prismicDoc) {\n    const data = prismicDoc.page_content;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Header, {\n      lang: lang,\n      uid: uid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(SliceZone, {\n      sliceZone: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  } else {\n    return null;\n  }\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/pages/Page.js"],"names":["React","useEffect","useState","client","SliceZone","Header","Page","match","prismicDoc","setPrismicDoc","lang","params","uid","fetchPrismicData","pageDoc","getByUID","data","console","warn","error","page_content"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA,oBACYL,QAAQ,CAAC,IAAD,CADpB;AAAA;AAAA,QACjBM,UADiB;AAAA,QACLC,aADK;;AAGxB,QAAOC,IAAI,GAAIH,KAAK,CAACI,MAAN,CAAaD,IAA5B;AACA,QAAME,GAAG,GAAGL,KAAK,CAACI,MAAN,CAAaC,GAAzB,CAJwB,CAKxB;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMX,MAAM,CAACY,QAAP,CAAgB,MAAhB,EAAwBH,GAAxB,EAA6B;AAACF,UAAAA;AAAD,SAA7B,CAAtB;;AACA,YAAII,OAAJ,EAAa;AACXL,UAAAA,aAAa,CAACK,OAAO,CAACE,IAAT,CAAb;AACD,SAFD,MAEO;AACLC,UAAAA,OAAO,CAACC,IAAR,CAAa,6EAAb;AACD;AACA,OAPH,CAOI,OAAOC,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACJ,KAXD;;AAaEN,IAAAA,gBAAgB;AACnB,GAfQ,EAeN,CAACD,GAAD,EAAK;AAACF,IAAAA;AAAD,GAAL,CAfM,CAAT;;AAiBA,MAAIF,UAAJ,EAAgB;AACd,UAAMQ,IAAI,GAAGR,UAAU,CAACY,YAAxB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAEV,IAAd;AAAoB,MAAA,GAAG,EAAGE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEA;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEI,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFA,CADF;AAQD,GAXD,MAWO;AACH,WAAO,IAAP;AACH;AAEF,CAtCD;;AAyCA,eAAeV,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { client } from '../prismic-config';\nimport SliceZone from '../components/sliceZone';\nimport Header from '../components/layouts/Header';\n\n\n\nconst Page = ({match}) => {\n  const [prismicDoc, setPrismicDoc] = useState(null);\n  \n  const  lang  = match.params.lang\n  const uid = match.params.uid\n  // Get the homepage documents from Prismic\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const pageDoc = await client.getByUID('page', uid, {lang} );\n        if (pageDoc) {\n          setPrismicDoc(pageDoc.data);\n        } else {\n          console.warn('Page document was not found. Make sure it exists in your Prismic repository');\n        }\n        } catch (error) {\n          console.error(error);\n        }\n    }\n  \n      fetchPrismicData();\n  }, [uid,{lang}]);\n\n  if (prismicDoc) {\n    const data = prismicDoc.page_content;\n    \n    return (\n      <div>\n        <Header lang={lang} uid ={uid}/>\n      <div className = \"container\">\n          <SliceZone sliceZone={data} />\n     </div>\n      </div>\n    );\n  } else {\n      return null;\n  }\n   \n}\n  \n  \nexport default Page;"]},"metadata":{},"sourceType":"module"}