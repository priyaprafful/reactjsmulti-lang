{"ast":null,"code":"import _slicedToArray from \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/components/layouts/Header.js\";\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../../prismic-config';\n\nconst Header = ({}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        menuData = _useState2[0],\n        setMenuData = _useState2[1]; // Get the homepage documents from Prismic\n\n\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const menuDoc = await client.getSingle('menu');\n\n        if (menuDoc) {\n          console.log(\"menuDoc is\", menuDoc);\n          setMenuData(menuData);\n          console.log(\"menuDoc 1 is\", menuDoc);\n        } else {\n          console.warn('Blog Home document was not found. Make sure it exists in your Prismic repository');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchPrismicData();\n  }, []);\n\n  if (menuData) {\n    return React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/images/check1.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"logo-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Todoapp\")), \"menuData.data.menu_links.map((menuLinks) => \", \")\");\n  } else {\n    return null;\n  }\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/components/layouts/Header.js"],"names":["React","useEffect","useState","client","Header","menuData","setMenuData","fetchPrismicData","menuDoc","getSingle","console","log","warn","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAGA,MAAMC,MAAM,GAAG,CAAC,EAAD,KAAQ;AAAA,oBACWF,QAAQ,CAAC,IAAD,CADnB;AAAA;AAAA,QACdG,QADc;AAAA,QACJC,WADI,kBAGrB;;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,OAAO,GAAG,MAAML,MAAM,CAACM,SAAP,CAAiB,MAAjB,CAAtB;;AACA,YAAID,OAAJ,EAAa;AACXE,UAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA0BH,OAA1B;AACAF,UAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAa,cAAb,EAA4BH,OAA5B;AACD,SAJD,MAIO;AACLE,UAAAA,OAAO,CAACE,IAAR,CAAa,kFAAb;AACD;AACA,OATH,CASI,OAAOC,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD;AACJ,KAbD;;AAeEN,IAAAA,gBAAgB;AACnB,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAIF,QAAJ,EAAc;AACZ,WACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,sDADF;AAaD,GAdD,MAcO;AACL,WAAO,IAAP;AACD;AACF,CAxCD;;AA0CA,eAAeD,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { client } from '../../prismic-config'\n\n\nconst Header = ({}) => {\n  const [menuData, setMenuData] = useState(null);\n  \n  // Get the homepage documents from Prismic\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const menuDoc = await client.getSingle('menu');\n        if (menuDoc) {\n          console.log (\"menuDoc is\",menuDoc)\n          setMenuData(menuData);\n          console.log (\"menuDoc 1 is\",menuDoc)\n        } else {\n          console.warn('Blog Home document was not found. Make sure it exists in your Prismic repository');\n        }\n        } catch (error) {\n          console.error(error);\n        }\n    }\n  \n      fetchPrismicData();\n  }, []);\n\n  if (menuData) {\n    return (\n      <header className=\"header\">\n        <a href=\"/\">\n          <img src=\"/images/check1.png\"/>\n          <h3 className =\"logo-text\">Todoapp</h3>\n        </a>\n\n      menuData.data.menu_links.map((menuLinks) => {\n              \n      })\n   \n      </header>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}