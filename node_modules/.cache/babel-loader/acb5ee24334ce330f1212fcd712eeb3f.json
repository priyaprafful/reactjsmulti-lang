{"ast":null,"code":"import _slicedToArray from \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/pages/Homepage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../prismic-config';\nimport SliceZone from '../components/sliceZone';\nimport Header from '../components/layouts/Header';\n\nconst Homepage = ({\n  props\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        prismicData = _useState2[0],\n        setPrismicData = _useState2[1];\n\n  const lang = this.props.match.params.lang;\n  console.log(\"lang  \", lang); // Get the homepage documents from Prismic\n\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const homeDoc = await client.getSingle('homepage', {\n          lang\n        });\n\n        if (homeDoc) {\n          setPrismicData(homeDoc.data);\n        } else {\n          console.warn('Blog Home document was not found. Make sure it exists in your Prismic repository');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchPrismicData();\n  }, []);\n\n  if (prismicData) {\n    const data = prismicData.page_content;\n    console.log(data);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(SliceZone, {\n      sliceZone: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n};\n\nexport default Homepage;","map":{"version":3,"sources":["/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/pages/Homepage.js"],"names":["React","useEffect","useState","client","SliceZone","Header","Homepage","props","prismicData","setPrismicData","lang","match","params","console","log","fetchPrismicData","homeDoc","getSingle","data","warn","error","page_content"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA,oBACUL,QAAQ,CAAC,IAAD,CADlB;AAAA;AAAA,QACrBM,WADqB;AAAA,QACRC,cADQ;;AAI5B,QAAOC,IAAI,GAAI,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBF,IAAvC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,IAAtB,EAL4B,CAM5B;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMb,MAAM,CAACc,SAAP,CAAiB,UAAjB,EAA6B;AAACP,UAAAA;AAAD,SAA7B,CAAtB;;AACA,YAAIM,OAAJ,EAAa;AACXP,UAAAA,cAAc,CAACO,OAAO,CAACE,IAAT,CAAd;AACD,SAFD,MAEO;AACLL,UAAAA,OAAO,CAACM,IAAR,CAAa,kFAAb;AACD;AACA,OAPH,CAOI,OAAOC,KAAP,EAAc;AACdP,QAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACD;AACJ,KAXD;;AAaEL,IAAAA,gBAAgB;AACnB,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIP,WAAJ,EAAiB;AACf,UAAMU,IAAI,GAAGV,WAAW,CAACa,YAAzB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAaI,IAAb;AAEA,WAEE;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAGA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF;AAMD,GAVD,MAUO;AACH,WAAO,IAAP;AACH;AAEF,CAtCD;;AAyCA,eAAeZ,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { client } from '../prismic-config';\nimport SliceZone from '../components/sliceZone';\nimport Header from '../components/layouts/Header';\n\nconst Homepage = ({props}) => {\n  const [prismicData, setPrismicData] = useState(null);\n  \n  \n  const  lang  = this.props.match.params.lang;\n  console.log(\"lang  \", lang);\n  // Get the homepage documents from Prismic\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const homeDoc = await client.getSingle('homepage', {lang});\n        if (homeDoc) {\n          setPrismicData(homeDoc.data);\n        } else {\n          console.warn('Blog Home document was not found. Make sure it exists in your Prismic repository');\n        }\n        } catch (error) {\n          console.error(error);\n        }\n    }\n  \n      fetchPrismicData();\n  }, []);\n\n  if (prismicData) {\n    const data = prismicData.page_content;\n    console.log (data);\n    \n    return (\n      \n      <div className = \"container\">\n        <SliceZone sliceZone={ data } />\n      </div>\n    );\n  } else {\n      return null;\n  }\n   \n}\n  \n  \nexport default Homepage;"]},"metadata":{},"sourceType":"module"}