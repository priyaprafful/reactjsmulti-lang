{"ast":null,"code":"import Prismic from 'prismic-javascript'; // -- Prismic API endpoint\n// Determines which repository to query and fetch data from\n// Configure your site's access point here\n\nexport const apiEndpoint = 'https://todo-app-sample.cdn.prismic.io/api/v2'; // -- Access Token if the repository is not public\n// Generate a token in your dashboard and configure it here if your repository is private\n\nexport const accessToken = ''; // -- Link resolution rules\n// Manages the url links to internal Prismic documents\n\nexport const linkResolver = doc => {\n  console.log(\"link resolver doc\");\n\n  if (doc.type === \"page\") {\n    return `/${doc.lang}/${doc.uid}`;\n  } else {\n    return `/${doc.lang}/`;\n  }\n}; // Client method to query documents from the Prismic repo\n\nexport const client = Prismic.client(apiEndpoint, {\n  accessToken\n});","map":{"version":3,"sources":["/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/prismic-config.js"],"names":["Prismic","apiEndpoint","accessToken","linkResolver","doc","console","log","type","lang","uid","client"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB,C,CACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,+CAApB,C,CAEP;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,EAApB,C,CAEP;AACA;;AACA,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAS;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,MAAIF,GAAG,CAACG,IAAJ,KAAa,MAAjB,EAAyB;AACvB,WAAQ,IAAGH,GAAG,CAACI,IAAK,IAAGJ,GAAG,CAACK,GAAI,EAA/B;AACD,GAFD,MAEO;AACL,WAAQ,IAAGL,GAAG,CAACI,IAAK,GAApB;AACD;AACF,CAPM,C,CASP;;AACA,OAAO,MAAME,MAAM,GAAGV,OAAO,CAACU,MAAR,CAAeT,WAAf,EAA4B;AAAEC,EAAAA;AAAF,CAA5B,CAAf","sourcesContent":["import Prismic from 'prismic-javascript'\n// -- Prismic API endpoint\n// Determines which repository to query and fetch data from\n// Configure your site's access point here\nexport const apiEndpoint = 'https://todo-app-sample.cdn.prismic.io/api/v2'\n\n// -- Access Token if the repository is not public\n// Generate a token in your dashboard and configure it here if your repository is private\nexport const accessToken = ''\n\n// -- Link resolution rules\n// Manages the url links to internal Prismic documents\nexport const linkResolver = (doc) => {\n  console.log(\"link resolver doc\")\n  if (doc.type === \"page\") {\n    return `/${doc.lang}/${doc.uid}`;\n  } else {\n    return `/${doc.lang}/`;\n  }\n}\n\n// Client method to query documents from the Prismic repo\nexport const client = Prismic.client(apiEndpoint, { accessToken })"]},"metadata":{},"sourceType":"module"}