{"ast":null,"code":"import _slicedToArray from \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/components/layouts/MenuLinks.js\";\nimport React, { useEffect, useState } from 'react';\nimport { client, linkResolver } from '../../prismic-config';\nimport { RichText, Link } from 'prismic-reactjs';\n\nconst MenuLinks = ({\n  params\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        menuData = _useState2[0],\n        setMenuData = _useState2[1];\n\n  console.log(\"params in menuLinks \", params); // Get the homepage documents from Prismic\n\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const menuDoc = await client.getSingle('menu', {\n          lang\n        });\n\n        if (menuDoc) {\n          setMenuData(menuDoc);\n        } else {\n          console.warn('Page document was not found. Make sure it exists in your Prismic repository');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchPrismicData();\n  }, []);\n\n  if (menuData) {\n    console.log(\"menudata \", menuData);\n    return React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, menuData.data.menu_links.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: Link.url(item.link, linkResolver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, RichText.asText(item.label)))), menuData.alternate_languages.map(altLang => React.createElement(\"li\", {\n      key: altLang.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: linkResolver(altLang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"flag-icon flag-icon-\" + altLang.lang.slice(-2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))))));\n  } else {\n    return null;\n  }\n};\n\nexport default MenuLinks;","map":{"version":3,"sources":["/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/components/layouts/MenuLinks.js"],"names":["React","useEffect","useState","client","linkResolver","RichText","Link","MenuLinks","params","menuData","setMenuData","console","log","fetchPrismicData","menuDoc","getSingle","lang","warn","error","data","menu_links","map","item","url","link","asText","label","alternate_languages","altLang","id","slice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAgBC,YAAhB,QAAoC,sBAApC;AACA,SAASC,QAAT,EAAoBC,IAApB,QAA+B,iBAA/B;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA,oBACEN,QAAQ,CAAC,IAAD,CADV;AAAA;AAAA,QACvBO,QADuB;AAAA,QACbC,WADa;;AAG9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,MAApC,EAH8B,CAM9B;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMX,MAAM,CAACY,SAAP,CAAiB,MAAjB,EAAyB;AAACC,UAAAA;AAAD,SAAzB,CAAtB;;AACA,YAAIF,OAAJ,EAAa;AACXJ,UAAAA,WAAW,CAACI,OAAD,CAAX;AACD,SAFD,MAEO;AACLH,UAAAA,OAAO,CAACM,IAAR,CAAa,6EAAb;AACD;AACA,OAPH,CAOI,OAAOC,KAAP,EAAc;AACdP,QAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACD;AACJ,KAXD;;AAaEL,IAAAA,gBAAgB;AACnB,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIJ,QAAJ,EAAc;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBH,QAAxB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACU,IAAT,CAAcC,UAAd,CAAyBC,GAAzB,CAA8BC,IAAI,IACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAEhB,IAAI,CAACiB,GAAL,CAASD,IAAI,CAACE,IAAd,EAAoBpB,YAApB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,QAAQ,CAACoB,MAAT,CAAgBH,IAAI,CAACI,KAArB,CADL,CADJ,CADC,CADH,EAQGjB,QAAQ,CAACkB,mBAAT,CAA6BN,GAA7B,CAAiCO,OAAO,IACvC;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAEzB,YAAY,CAACwB,OAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,SAAS,EAAE,yBAAyBA,OAAO,CAACZ,IAAR,CAAac,KAAb,CAAmB,CAAC,CAApB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADD,CARH,CADA,CADJ;AAyBH,GA3BD,MA2BO;AACH,WAAO,IAAP;AACH;AAEF,CAvDD;;AA0DA,eAAevB,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { client,linkResolver } from '../../prismic-config';\nimport { RichText , Link} from 'prismic-reactjs';\n\n\nconst MenuLinks = ({params}) => {\n  const [menuData, setMenuData] = useState(null);\n  \n  console.log(\"params in menuLinks \", params);\n\n  \n  // Get the homepage documents from Prismic\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const menuDoc = await client.getSingle('menu', {lang});\n        if (menuDoc) {\n          setMenuData(menuDoc);\n        } else {\n          console.warn('Page document was not found. Make sure it exists in your Prismic repository');\n        }\n        } catch (error) {\n          console.error(error);\n        }\n    }\n  \n      fetchPrismicData();\n  }, []);\n\n  if (menuData) {\n      console.log(\"menudata \",menuData)\n      return ( \n          <nav>\n          <ul>\n            {menuData.data.menu_links.map (item =>\n            <li>\n                <a href={Link.url(item.link, linkResolver)}>\n                    {RichText.asText(item.label)}\n                </a>\n            </li>\n            )}\n            {menuData.alternate_languages.map(altLang=>\n              <li key={altLang.id}>\n                <a href={linkResolver(altLang)}>\n                <p className={\"flag-icon flag-icon-\" + altLang.lang.slice(-2)}></p>\n                </a>\n              </li>\n                \n            )}\n          </ul>\n          </nav>\n        \n        \n        );\n    \n\n  } else {\n      return null;\n  }\n   \n}\n  \n  \nexport default MenuLinks;"]},"metadata":{},"sourceType":"module"}