{"ast":null,"code":"import _slicedToArray from \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/components/layouts/Header.js\";\nimport React, { useEffect, useState } from 'react';\nimport { client } from '.../prismic-config';\n\nconst Header = ({\n  match\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        menuData = _useState2[0],\n        setMenuData = _useState2[1];\n\n  const lang = match.params.lang; // Get the homepage documents from Prismic\n\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const menuDoc = await client.getSingle('menu', {\n          lang\n        });\n\n        if (menuDoc) {\n          setMenuData(menuDoc);\n        } else {\n          console.warn('Blog Home document was not found. Make sure it exists in your Prismic repository');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchPrismicData();\n  }, []);\n\n  if (menuData) {\n    return React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/images/check1.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"logo-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Todoapp\")));\n  } else {\n    return null;\n  }\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/priyankamaheshwari/Desktop/reactjs-multi-lang/src/components/layouts/Header.js"],"names":["React","useEffect","useState","client","Header","match","menuData","setMenuData","lang","params","fetchPrismicData","menuDoc","getSingle","console","warn","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,oBAAvB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA,oBACMH,QAAQ,CAAC,IAAD,CADd;AAAA;AAAA,QACnBI,QADmB;AAAA,QACTC,WADS;;AAG1B,QAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAaD,IAA1B,CAH0B,CAI1B;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMR,MAAM,CAACS,SAAP,CAAiB,MAAjB,EAAyB;AAACJ,UAAAA;AAAD,SAAzB,CAAtB;;AACA,YAAIG,OAAJ,EAAa;AACXJ,UAAAA,WAAW,CAACI,OAAD,CAAX;AACD,SAFD,MAEO;AACLE,UAAAA,OAAO,CAACC,IAAR,CAAa,kFAAb;AACD;AACA,OAPH,CAOI,OAAOC,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACJ,KAXD;;AAaEL,IAAAA,gBAAgB;AACnB,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIJ,QAAJ,EAAc;AACZ,WACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,CADF;AAQD,GATD,MASO;AACH,WAAO,IAAP;AACH;AAEF,CAnCD;;AAsCA,eAAeF,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { client } from '.../prismic-config'\n\n\nconst Header = ({match}) => {\n  const [menuData, setMenuData] = useState(null);\n  \n  const lang = match.params.lang\n  // Get the homepage documents from Prismic\n  useEffect(() => {\n    const fetchPrismicData = async () => {\n      try {\n        const menuDoc = await client.getSingle('menu', {lang});\n        if (menuDoc) {\n          setMenuData(menuDoc);\n        } else {\n          console.warn('Blog Home document was not found. Make sure it exists in your Prismic repository');\n        }\n        } catch (error) {\n          console.error(error);\n        }\n    }\n  \n      fetchPrismicData();\n  }, []);\n\n  if (menuData) {\n    return (\n      <header className=\"header\">\n        <a href=\"/\">\n          <img src=\"/images/check1.png\"/>\n          <h3 className =\"logo-text\">Todoapp</h3>\n        </a>\n      </header>\n    );\n  } else {\n      return null;\n  }\n   \n}\n  \n  \nexport default Header;"]},"metadata":{},"sourceType":"module"}